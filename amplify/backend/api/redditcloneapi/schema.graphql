type Post
  @model
  @auth(
    rules: [
      # Owner can perform any action on their own Post
      { allow: owner, operations: [create, update, delete, read] }
      # Other signed in users can read everyones posts
      { allow: private, operations: [read] }
      # Non-signed in users (guests) can read everyones posts as well.
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  title: String!
  contents: String!
  image: String
  votes: [Vote!]! @connection(keyName: "byVote", fields: ["id"])
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type Comment
  @model
  @key(name: "byPost", fields: ["postID", "content"])
  @auth(
    rules: [
      { allow: owner, operations: [create, update, delete, read] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  content: String!
}

type Vote
  @model
  @key(name: "byVote", fields: ["postID", "vote"])
  @auth(
    rules: [
      { allow: owner, operations: [create, update, delete, read] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  vote: String! #true for upvote and false for downvote
  postID: ID!
  post: Post @connection(fields: ["postID"])
}
